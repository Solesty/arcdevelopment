[{"/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/index.js":"1","/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/components/ui/App.js":"2","/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/components/ui/Header.js":"3","/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/components/ui/theme.js":"4","/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/components/ui/Footer.js":"5","/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/components/LandingPage.js":"6","/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/animations/landinganimation/data.js":"7"},{"size":165,"mtime":1611281936447,"results":"8","hashOfConfig":"9"},{"size":1622,"mtime":1612066225354,"results":"10","hashOfConfig":"9"},{"size":10764,"mtime":1612063284928,"results":"11","hashOfConfig":"9"},{"size":1054,"mtime":1611638489934,"results":"12","hashOfConfig":"9"},{"size":5813,"mtime":1612064667795,"results":"13","hashOfConfig":"9"},{"size":624,"mtime":1612065980479,"results":"14","hashOfConfig":"9"},{"size":3890,"mtime":1611280789935,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"981rz9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/index.js",[],["34","35"],"/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/components/ui/App.js",[],"/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/components/ui/Header.js",["36"],"import React, { useState, useEffect } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { makeStyles } from '@material-ui/styles'\n\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { useTheme } from '@material-ui/core/styles'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport logo from '../../assets/logo.svg'\nimport { IconButton } from '@material-ui/core';\n\nfunction ElevationScroll(props) {\n    const { children } = props;\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n    });\n\n    return React.cloneElement(children, {\n        elevation: trigger ? 4 : 0,\n    });\n}\n\nconst useStyles = makeStyles(theme => ({\n    toolbarMargin: {\n        ...theme.mixins.toolbar,\n        marginBottom: '3em',\n        [theme.breakpoints.down('md')]: {\n            marginBottom: '2em'\n        }, [theme.breakpoints.down('xs')]: {\n            marginBottom: '1.25em'\n        },\n    },\n    logo: {\n        height: '8em',\n        [theme.breakpoints.down('md')]: {\n            'height': '7em'\n        },\n        [theme.breakpoints.down('xs')]: { // mobile phones 600 below\n            'height': '5.5em'\n        }\n    },\n    tabContainer: {\n        marginLeft: 'auto' // push the children to the right side\n    },\n    tab: {\n        ...theme.typography.tab,\n        minWidth: 10,\n        marginLeft: '25px' // we use pixel here to main a constant spacing hence we don't use rem (responsive unit)\n    },\n    button: {\n        ...theme.typography.estimate,\n        borderRadius: '30px',\n        marginRight: '25px',\n        marginLeft: '25px',\n        height: '45px',\n    },\n    logoContainer: {\n        padding: 0,\n        '&:hover': {\n            backgroundColor: 'transparent'\n        }\n    },\n    menu: {\n        backgroundColor: theme.palette.common.arcBlue,\n        color: 'white',\n        borderRadius: 0\n    },\n    menuItem: {\n        ...theme.typography.tab,\n        opacity: 0.7,\n        '&:hover': {\n            'opacity': 1\n        }\n    },\n    drawIcon: {\n        height: '50px',\n        width: '50px'\n    },\n    drawerIconContainer: {\n        marginLeft: 'auto',\n        '&;hover': {\n            backgroundColor: 'transparent',\n        }\n    },\n    drawer: {\n        backgroundColor: theme.palette.common.arcBlue,\n    },\n    drawerItem: {\n        ...theme.typography.tab,\n        color: 'white',\n        opacity: 0.7\n    },\n    drawItemEstimate: {\n        backgroundColor: theme.palette.common.arcOrange\n    },\n    drawItemSelected: {\n        '& .MuiListItemText-root': {\n            opacity: 1\n        },\n    },\n    appBar: {\n        zIndex: theme.zIndex.modal + 1\n    }\n}))\n\n\nexport default function Header(props) {\n    const classes = useStyles()\n    const theme = useTheme()\n    const matchesMediumAndBelow = useMediaQuery(theme.breakpoints.down('md')) //medium and below\n\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n    const [openDrawer, setOpenDrawer] = useState(false)\n\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [openMenu, setOpenMenu] = useState(false)\n\n    const handleChange = (e, newValue) => {\n        props.setValue(newValue)\n    }\n\n    const handleMenuItemClick = (e, index) => {\n        setAnchorEl(null)\n        setOpenMenu(false)\n        props.setSelectedIndex(index)\n    }\n\n    const handleClick = (e) => {\n        setAnchorEl(e.currentTarget)\n        setOpenMenu(true)\n    }\n\n    const handleClose = (e) => {\n        setAnchorEl(null)\n        setOpenMenu(false)\n    }\n\n    const menuOptions = [\n        { name: 'Services', link: '/services', activeIndex: 1, selectedIndex: 0 },\n        { name: 'Custom Software Development', link: '/customsoftware', activeIndex: 1, selectedIndex: 1 },\n        { name: 'Mobile App Development', link: '/mobileapps', activeIndex: 1, selectedIndex: 3 },\n        { name: 'Website Development', link: '/websites', activeIndex: 1, selectedIndex: 4 },\n    ]\n    const routes = [\n        { name: 'Home', link: '/', activeIndex: 0 },\n        {\n            name: 'Services', link: '/services', activeIndex: 1,\n            ariaOwns: anchorEl ? 'simple-menu' : undefined,\n            ariaPopup: anchorEl ? 'true' : undefined,\n            mouseOver: (event) => handleClick(event)\n        },\n        { name: 'Revolution', link: '/revolution', activeIndex: 2 },\n        { name: 'About Us', link: '/about', activeIndex: 3 },\n        { name: 'Contact', link: '/contact', activeIndex: 4 },\n    ]\n\n    // a use effect to highlight the active menu on the page\n    // use one use effect for one particular thing? \n    useEffect(() => {\n        // code we want to run anytime a component updates\n\n        [...menuOptions, ...routes].forEach((route => {\n            switch (window.location.pathname) {\n                case `${route.link}`:\n                    if (props.value !== route.activeIndex) {\n                        // check the current url and set the approviate value\n                        props.setValue(route.activeIndex)\n                        if (route.selectedIndex && route.selectedIndex !== props.selectedIndex) {\n                            props.setSelectedIndex(route.selectedIndex)\n                        }\n                    }\n                    break\n                default:\n                    break\n            }\n        }))\n\n\n    }, [props.value, menuOptions, props.selectedIndex, routes]) // we are depending on this state value\n\n    const tabs = (\n        <React.Fragment>\n            <Tabs onChange={handleChange} value={props.value} className={classes.tabContainer} >\n                {\n                    routes.map((route, index) => {\n                        return <Tab key={`route${index}`} component={Link} to={route.link} className={classes.tab} label={route.name}\n                            aria-owns={route.ariaOwns}\n                            aria-haspopup={route.ariaPopup}\n                            onMouseOver={route.mouseOver}\n                        ></Tab>\n                    })\n                }\n            </Tabs>\n            <Button variant='contained' color='secondary' className={classes.button} >\n                Free Estimate\n        </Button>\n            <Menu id='simple-menu' anchorEl={anchorEl}\n                open={openMenu} onClose={handleClose}\n                classes={{ paper: classes.menu }}\n                style={{ zIndex: 1302 }}\n                MenuListProps={{ onMouseLeave: handleClose }}\n                elevation={0}\n                keepMounted\n            >\n                {\n                    menuOptions.map((option, index) => {\n                        return <MenuItem\n                            key={`${option}${index}`}\n                            onClick={(e) => { handleMenuItemClick(e, index); props.setValue(1); handleClose(); }}\n                            component={Link}\n                            classes={{ root: classes.menuItem }}\n                            to={option.link}\n                            selected={index === props.selectedIndex && props.value === 1}\n                        >\n                            {option.name}\n                        </MenuItem>\n                    })\n                }\n            </Menu>\n        </React.Fragment>\n    )\n    const drawer = (\n        <React.Fragment>\n            <SwipeableDrawer disableBackdropTransition={!iOS}\n                disableDiscovery={iOS}\n                open={openDrawer} onOpen={() => setOpenDrawer(true)} onClose={() => setOpenDrawer(false)}\n                classes={{ paper: classes.drawer }}\n            >\n                <div className={classes.toolbarMargin} ></div>\n                <List disablePadding >\n                    {\n                        routes.map((route, index) => {\n                            return <ListItem\n                                key={`route${route.activeIndex}`}\n                                onClick={() => { setOpenDrawer(false); props.setValue(route.activeIndex) }}\n                                divider button\n                                component={Link}\n                                to={route.link}\n                                selected={props.value === route.activeIndex}\n                                classes={{ selected: classes.drawerItemSelected }}\n                            >\n                                <ListItemText className={classes.drawerItem} disableTypography >{route.name}</ListItemText>\n                            </ListItem>\n                        })\n                    }\n                    <ListItem className={{ root: classes.drawItemEstimate, selected: classes.drawerItemSelected }} onClick={() => { setOpenDrawer(false); props.setValue(5) }} divider button component={Link} to='/estimate' selected={props.value === 5} >\n                        <ListItemText className={classes.drawerItem} disableTypography >Free Estimate</ListItemText>\n                    </ListItem>\n                </List>\n            </SwipeableDrawer>\n            <IconButton onClick={() => setOpenDrawer(!openDrawer)} disableRipple className={classes.drawerIconContainer} >\n                <MenuIcon className={classes.drawIcon} />\n            </IconButton>\n        </React.Fragment>\n    )\n    return (\n        <React.Fragment>\n            <ElevationScroll>\n                <AppBar position='fixed' color='primary' className={classes.appBar} >\n                    {/* disableGutters remove padding around the component */}\n                    <Toolbar disableGutters  >\n                        <Button\n                            disableRipple\n                            onClick={() => {\n                                props.setValue(0)\n                            }} component={Link} to='/' className={classes.logoContainer} >\n                            <img src={logo} alt='company logo' className={classes.logo} />\n                        </Button>\n                        {matchesMediumAndBelow ? drawer : tabs}\n                    </Toolbar>\n                </AppBar>\n            </ElevationScroll>\n            {/* adds space between the appbar and the content below */}\n            <div className={classes.toolbarMargin} ></div>\n        </React.Fragment >\n    )\n}\n","/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/components/ui/theme.js",["37","38"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst arcBlue = '#0B72B9';\nconst arcOrange = '#FFBA60'\n\nexport default createMuiTheme({\n    palette: {\n        common: {\n            arcBlue: `${arcBlue}`,\n            arcOrange: `${arcOrange}`\n        },\n        primary: {\n            main: `${arcBlue}`\n        },\n        secondary: {\n            main: `${arcOrange}`\n        }\n    },\n    typography: {\n        tab: {\n            fontFamily: 'Raleway',\n            textTransform: 'none',\n            fontWeight: 700,\n            fontSize: '1rem',\n        },\n        estimate: {\n            fontFamily: 'Pacifico',\n            fontSize: '1rem',\n            color: 'white',\n            textTransform: 'none',\n        }\n    }\n})\n\n// const theme = createMuiTheme({\n//     palette: {\n//         primary: {\n//             main: purple[500],\n//         },\n//         secondary: {\n//             main: green[500],\n//         },\n//     },\n// });","/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/components/ui/Footer.js",["39"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Hidden from '@material-ui/core/Hidden'\n\nimport footerAdornment from '../../assets/Footer Adornment.svg'\nimport facebook from '../../assets/facebook.svg'\nimport twitter from '../../assets/twitter.svg'\nimport instagram from '../../assets/instagram.svg'\n\nconst useStyles = makeStyles(theme => ({\n    footer: {\n        backgroundColor: theme.palette.common.arcBlue,\n        width: '100%',\n        zIndex: 1302,\n        position: 'relative'\n    },\n    adornment: {\n        width: '25em',\n        verticalAlign: 'bottom',\n        [theme.breakpoints.down('md')]: {\n            width: '21em'\n        },\n        [theme.breakpoints.down('xs')]: {\n            width: '15em'\n        },\n    },\n    mainContainer: {\n        position: 'absolute'\n    },\n    link: {\n        color: 'white',\n        fontFamily: 'Arial',\n        fontSize: '0.75rem',\n        fontWeight: 'bold',\n        textDecoration: 'none'\n    },\n    gridItem: {\n        margin: '3em'\n    },\n    icon: {\n        height: '4em',\n        width: '4em',\n        [theme.breakpoints.down('xs')]: {\n            height: '2.5em',\n            width: '2.5em'\n        }\n    },\n    socialContainer: {\n        position: 'absolute',\n        marginTop: '-6em',\n        right: '1.2em',\n        [theme.breakpoints.down('xs')]: {\n            right: '0.6em',\n        }\n    }\n}))\n\nexport default function Footer(props) {\n\n    const classes = useStyles()\n\n    return (\n        <footer className={classes.footer} >\n            <Hidden mdDown >\n                <Grid justify={'center'} container className={classes.mainContainer} >\n                    <Grid item className={classes.gridItem} >\n                        <Grid container direction={'column'} spacing={2} >\n                            <Grid component={Link} to='/' item className={classes.link} onClick={() => props.setValue(0)} > Home</Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.gridItem} >\n                        <Grid container direction={'column'} spacing={2}>\n                            <Grid item component={Link} to='/services' className={classes.link} onClick={() => { props.setValue(1); props.setSelectedIndex(0) }} > Services</Grid>\n                            <Grid item component={Link} to='/customsoftware' className={classes.link} onClick={() => { props.setValue(1); props.setSelectedIndex(1) }} >  Custom Software Development </Grid>\n                            <Grid item component={Link} to='/mobileapps' className={classes.link} onClick={() => { props.setValue(1); props.setSelectedIndex(2) }} > Mobile App Development  </Grid>\n                            <Grid item component={Link} to='/websites' className={classes.link} onClick={() => { props.setValue(1); props.setSelectedIndex(3) }} >  Website Development </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.gridItem} >\n                        <Grid container direction={'column'} spacing={2} >\n                            <Grid item component={Link} to='/revolution' className={classes.link} onClick={() => props.setValue(2)} > Revolution</Grid>\n                            <Grid item component={Link} to='/revolution' className={classes.link} onClick={() => props.setValue(2)} > Vision</Grid>\n                            <Grid item component={Link} to='/revolution' className={classes.link} onClick={() => props.setValue(2)}> Technology</Grid>\n                            <Grid item component={Link} to='/revolution' className={classes.link} onClick={() => props.setValue(2)}> Process</Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.gridItem} >\n                        <Grid container direction={'column'} spacing={2} >\n                            <Grid component={Link} to='/about' item className={classes.link} onClick={() => props.setValue(3)} > About Us</Grid>\n                            <Grid component={Link} to='/about' item className={classes.link} onClick={() => props.setValue(3)} > History</Grid>\n                            <Grid component={Link} to='/about' item className={classes.link} onClick={() => props.setValue(3)}> Team</Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.gridItem} >\n                        <Grid container direction={'column'} spacing={2} >\n                            <Grid component={Link} to='/contact' item className={classes.link} onClick={() => props.setValue(4)}> Contact Us</Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Hidden>\n            <img className={classes.adornment} alt='black decorative slash'\n                src={footerAdornment}\n            />\n            <Grid container justify='flex-end' className={classes.socialContainer} spacing={2} >\n                <Grid item component={'a'} href='https://facebook.com' rel='noopener noreferrer' target='_blank'  >\n                    <img alt='facebook logo' src={facebook} className={classes.icon} />\n                </Grid>\n                <Grid item component={'a'} href='https://twitter.com' rel='noopener noreferrer' target='_blank' >\n                    <img alt='twitter logo' src={twitter} className={classes.icon} />\n                </Grid>\n                <Grid item component={'a'} href='https://instagram.com' rel='noopener noreferrer' target='_blank' >\n                    <img alt='instagram logo' src={instagram} className={classes.icon} />\n                </Grid>\n            </Grid>\n        </footer>\n    )\n}\n","/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/components/LandingPage.js",["40"],"/home/adeleke/Documents/Station/LEARN/CODES/arcdevelopment/src/animations/landinganimation/data.js",["41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":193,"column":8,"nodeType":"48","endLine":193,"endColumn":63,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":13},{"ruleId":"50","severity":1,"message":"55","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":26},{"ruleId":"50","severity":1,"message":"56","line":12,"column":11,"nodeType":"52","messageId":"53","endLine":12,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":7,"column":1,"nodeType":"59","endLine":191,"endColumn":3},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["62"],"no-unused-vars","'purple' is defined but never used.","Identifier","unusedVar","'green' is defined but never used.","'Component' is defined but never used.","'classes' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [props.value, menuOptions, props.selectedIndex, routes, props]",{"range":"65","text":"66"},[5918,5973],"[props.value, menuOptions, props.selectedIndex, routes, props]"]